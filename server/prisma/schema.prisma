generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  username        String   @unique
  email           String   @unique
  password        String
  profileImage    String?
  coverImage      String?
  followingIds    String[] @db.ObjectId
  followersIds    String[] @db.ObjectId
  hasNotification Boolean?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  post         Post[]
  comments     Comment[]
  notification Notification[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  userId    String   @db.ObjectId
  image     String?
  likedIds  String[] @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String?  @db.ObjectId
  postId    String?  @db.ObjectId

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post? @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  createdAt DateTime @default(now())
  userId    String?  @db.ObjectId

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
}
